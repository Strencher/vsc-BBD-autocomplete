{
  "Build Plugin": {
    "prefix": "BuildPlugin",
    "body": [
      "//META{\"name\": \"${1:pluginName}\"}*//",
      "var ${2:pluginName} = (function () {",
      "    const config = {",
      "        \"info\": {",
      "            \"name\": \"${3:pluginName}\",",
      "            \"author\": \"${4:your_name}\",",
      "            \"description\": \"${5:Description}\",",
      "            \"version\": \"0.0.1\"",
      "        }",
      "    };",
      "    class ${6:pluginName} {",
      "        getName() {",
      "            return config.info.name;",
      "        };",
      "        getAuthor() {",
      "            return config.info.author;",
      "        };",
      "        getDescription() {",
      "            return config.info.description;",
      "        };",
      "        getVersion() {",
      "            return config.info.version;",
      "        };",
      "        load() { };",
      "        unload() { this.stop() };",
      "        start() { $8};",
      "        stop() { };",
      "    }",
      "    return ${7:pluginName};",
      "})()"
    ],
    "description": "Build's a plugin."
  },
  "Builds a ZLibrary Plugin": {
      "prefix": "Build ZPlugin",
      "body": [
            "/**",
            " * @name ${1:Plugin_Name}",
            " * @authorId ${2:Your_Discord_Id}",
            " * @version ${3:0.0.1}",
            " * @website ${4:https://www.google.com/}",
            " * @invite ${5:invite_code_to_your_server}",
            " * @source ${6:github_link}",
            " */",
            "let ${7:Plugin_Name} = (() => {",
            "    const config = {",
            "        info: {",
            "            name: \"${8:Plugin Name}\",",
            "            authors: [",
            "                {",
            "                    name: \"${9:Your Name}\",",
            "                    discord_id: \"${10:Your Discord ID}\"",
            "                }",
            "            ],",
            "        version: \"${11:0.0.1}\",",
            "        description: \"${12:Description of Plugin}\"},",
            "        changelog: [",
            "            {",
            "                title: \"New Features\",",
            "                type: \"added\",",
            "                items: [",
            "                    \"New feature added!\"",
            "                ]",
            "            },",
            "            {",
            "                title: \"Improvements\",",
            "                type: \"improved\",",
            "                items: [",
            "                    \"This was improved!\"",
            "                ]",
            "            },",
            "        ]",
            "    };",
            "",
            "    return !global.ZeresPluginLibrary ? class {",
            "        constructor() {this._config = config;}",
            "        getName() {return config.info.name;}",
            "        getAuthor() {return config.info.authors.map(a => a.name).join(\", \");}",
            "        getDescription() {return config.info.description;}",
            "        getVersion() {return config.info.version;}",
            "        load() {",
            "            BdApi.showConfirmationModal(\"Library plugin is needed\", ",
            "                [`The library plugin needed for ${config.info.name} is missing. Please click Download Now to install it.`], {",
            "                    confirmText: \"Download\",",
            "                    cancelText: \"Cancel\",",
            "                    onConfirm: () => {",
            "                        require(\"request\").get(\"https://rauenzi.github.io/BDPluginLibrary/release/0PluginLibrary.plugin.js\", async (error, response, body) => {",
            "                        if (error) return require(\"electron\").shell.openExternal(\"https://betterdiscord.net/ghdl?url=https://raw.githubusercontent.com/rauenzi/BDPluginLibrary/master/release/0PluginLibrary.plugin.js\");",
            "                        await new Promise(r => require(\"fs\").writeFile(require(\"path\").join(BdApi.Plugins.folder, \"0PluginLibrary.plugin.js\"), body, r));",
            "                        });",
            "                    }",
            "                });",
            "        }",
            "        start() {}",
            "        stop() {}",
            "    } : (([Plugin, Api]) => {",
            "        const plugin = (Plugin, Api) => {",
            "",
            "            const {Settings} = Api;",
            "            const {SettingPanel, Textbox, Switch} = Settings;",
            "",
            "            return class plugin_name extends Plugin {",
            "                constructor() {",
            "                    super();",
            "",
            "                    this.defaultSettings = {",
            "                        switch   : false,",
            "                        textbox  : \"\",",
            "                    };",
            "                }",
            "",
            "                onStart() {",
            "",
            "                };",
            "",
            "                onStop() {",
            "",
            "                };",
            "",
            "                getSettingsPanel() {",
            "                    return SettingPanel.build(this.saveSettings.bind(this),",
            "",
            "                    new Switch(\"X or Y\", \"OFF = X, ON = Y\", this.settings.switch, (e) => {this.settings.switch = e;}),",
            "                    new Textbox(\"Title\", \"Put some text in here!\", this.settings.textbox, (e) => {this.settings.textbox = e;})",
            "                    )",
            "                }",
            "            }",
            "",
            "        };",
            "        return plugin(Plugin, Api);",
            "    })(global.ZeresPluginLibrary.buildPlugin(config));",
            "})();"
        ],
        "description": "Builds a ZLibrary Plugin"
  }
}